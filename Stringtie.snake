import os

from snakemake.remote.S3 import RemoteProvider as S3RemoteProvider
s3_key_id = os.environ.get('AWS_ACCESS_KEY')
s3_access_key = os.environ.get('AWS_SECRET_KEY')

S3 = S3RemoteProvider(
    endpoint_url='https://s3.msi.umn.edu', 
    access_key_id=s3_key_id, 
    secret_access_key=s3_access_key
)



SAMPLES, = S3.glob_wildcards('HorseGeneAnnotation/private/sequence/RNASEQ/fastq/{sample}_R2_001.fastq.gz')
configfile: "config.yaml"


rule all:
    input:
        #S3.remote( expand("HorseGeneAnnotation/public/refgen/{GCF}/GFF/{sample}.gff" ,sample=SAMPLES,GCF=config['GCF']))
        expand('HorseGeneAnnotation/public/refgen/{GCF}/GFF/Merged.gff',GCF=config['GCF'])


rule sort_bam:
    input:
        bam = S3.remote('HorseGeneAnnotation/private/sequence/RNASEQ/bam/{sample}_Aligned.out.bam'),
    output:
        sortedbam = 'HorseGeneAnnotation/private/sequence/RNASEQ/bam/{sample}.sorted.bam'
    shell:
        '''
        samtools view -u {input.bam} | samtools sort - -o {output.sortedbam}
        '''


rule run_stringtie:
    input:
        bam = 'HorseGeneAnnotation/private/sequence/RNASEQ/bam/{sample}.sorted.bam',
        gff = S3.remote(expand("HorseGeneAnnotation/public/refgen/{GCF}/{GCF}_genomic.nice.gff.gz", GCF=config['GCF']),keep_local=True)
    output:
        gff = S3.remote(f"HorseGeneAnnotation/public/refgen/{config['GCF']}/GFF/{{sample}}.gff")
    run:
        shell('''
        stringtie \
        {input.bam} \
        -G {input.gff} \
        -o {output.gff}
        ''')


rule stringtie_merge:
    input:
        gffs = S3.remote(expand(f"HorseGeneAnnotation/public/refgen/{config['GCF']}/GFF/{{sample}}.gff",sample=SAMPLES)),
        refgff = S3.remote(expand("HorseGeneAnnotation/public/refgen/{GCF}/{GCF}_genomic.nice.gff.gz", GCF=config['GCF']),keep_local=True)
    output:
        merged_gff=expand('HorseGeneAnnotation/public/refgen/{GCF}/GFF/Merged.gff',GCF=config['GCF'])
    run:
        # Write each gff, one per line
        with open('all_GFFs_list.txt') as OUT: 
            print('\n'.join(input.gffs),file=OUT)
        shell('''
            stringtie \
            --merge -p 10 -o {output.merged_gff} \
            -G {input.refgff}
        ''')
        
