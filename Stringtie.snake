import os

from snakemake.remote.S3 import RemoteProvider as S3RemoteProvider
s3_key_id = os.environ.get('AWS_ACCESS_KEY')
s3_access_key = os.environ.get('AWS_SECRET_KEY')

S3 = S3RemoteProvider(
    endpoint_url='https://s3.msi.umn.edu', 
    access_key_id=s3_key_id, 
    secret_access_key=s3_access_key
)



SAMPLES, = S3.glob_wildcards('HorseGeneAnnotation/private/sequence/RNASEQ/fastq/{sample}_R2_001.fastq.gz')
configfile: "config.yaml"


rule all:
    input:
        #S3.remote(expand('qc/qc_raw/{sample}_fastqc.html', sample=SAMPLES)),
        #S3.remote(expand('qc/qc_trim/{sample}_fastqc.html', sample=SAMPLES)),
        #S3.remote(expand('HorseGeneAnnotation/private/sequence/RNASEQ/bam/{sample}_Aligned.out.bam', sample=SAMPLES)),
        S3.remote( expand("HorseGeneAnnotation/public/refgen/{GCF}/GFF/{sample}.gff" ,sample=SAMPLES,GCF=config['GCF']))
        #expand("HorseGeneAnnotation/public/refgen/{GCF}/GFF/{sample}.gff", GCF=config['GCF'],sample=['90M_ATCACG_L004'])


rule sort_bam:
    input:
        bam = S3.remote('HorseGeneAnnotation/private/sequence/RNASEQ/bam/{sample}_Aligned.out.bam',keep_local=True),
    output:
        sortedbam = 'HorseGeneAnnotation/private/sequence/RNASEQ/bam/{sample}.sorted.bam'
    shell:
        '''
        samtools view -u {input.bam} | samtools sort - -o {output.sortedbam}
        '''


rule run_stringtie:
    input:
        bam = 'HorseGeneAnnotation/private/sequence/RNASEQ/bam/{sample}.sorted.bam',
        gff = S3.remote(expand("HorseGeneAnnotation/public/refgen/{GCF}/{GCF}_genomic.nice.gff.gz", GCF=config['GCF']),keep_local=True)
    output:
        gff = S3.remote(f"HorseGeneAnnotation/public/refgen/{config['GCF']}/GFF/{{sample}}.gff")
    run:
        shell('''
        stringtie \
        {input.bam} \
        -G {input.gff} \
        -o {output.gff}
        ''')
